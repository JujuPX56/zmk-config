/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        gaming: gaming {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 3 &kp S>;
            label = "GAMING";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W    &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &gaming  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X    &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                           &kp LGUI  &mo 2  &kp ENTER    &kp SPACE  &mo 1  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB           &kp N1  &kp N2  &kp N3    &kp N4  &kp N5        &kp N6     &kp N7    &kp N8             &kp N9           &kp N0  &kp BSPC
&kp LEFT_CONTROL  &kp F1  &kp F2  &kp F3    &kp F4  &kp F5        &kp LEFT   &kp DOWN  &kp UP             &kp RIGHT        &trans  &trans
&kp LSHFT         &kp F6  &kp F7  &kp F8    &kp F9  &kp F10       &kp F11    &kp F12   &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans  &trans
                                  &kp LGUI  &trans  &kp RETURN    &kp SPACE  &trans    &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL        &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans          &trans  &trans    &trans    &kp GRAVE    &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp DOUBLE_QUOTES
&kp LSHFT  &bt BT_CLR_ALL  &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                                   &kp LGUI  &trans    &kp ENTER    &kp SPACE  &trans     &kp RALT
            >;
        };

        gaming_layer {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E          &kp R      &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D          &kp F      &kp G        &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C          &kp V      &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                         &kp LEFT_META  &kp SPACE  &kp ENTER    &kp SPACE  &mo 1  &kp LEFT_ALT
            >;
        };
    };
};
